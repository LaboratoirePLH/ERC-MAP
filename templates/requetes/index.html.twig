{% extends 'list_page.html.twig' %}

{% block title %}
   {{ 'requetes.title'|trans }}
{% endblock %}

{% block head %}{% endblock %}


{% block content %}
<div id="alert_bootstrap">
</div>
    {{ block("buttonGeneric", "requetes/partial.html.twig")}}
    
    {{ form(formEnrReq) }}
    <div id="general_req">
        <div id="type_donnee">
            <h3>
                {{ 'requetes.type_donnee' | trans }}
            </h3>
            {{ block("typeDonnee", "requetes/partial.html.twig") }}
        </div>
        <div id="criteres">
            <h3>
                {{ 'requetes.critere' | trans }}
            </h3>
            <br/>
            {{ block("buttonBarCritere", "requetes/partial.html.twig") }}
            <div id="liste_critere">
                {{ block("ajoutBox1", "requetes/partial.html.twig") }}
            </div>
        </div>      
        <div id="champ_affiche">
            <h3>
                {{ 'requetes.champs_afficher' | trans }}
            </h3>
            <br/>

            {{ block("buttonBarChampAffiche", "requetes/partial.html.twig") }}

            <div id="liste_affiche">
                {{ block("champAffiche", "requetes/partial.html.twig") }}
            </div>
        </div>    
    </div>

    {{ block('buttonGeneric', 'requetes/partial.html.twig')}} 

    <!-- Tableau d'affichage des résultats -->
    <div class="col-12 table-buttons2">
    </div>
    <div id="infoTableauResultat">
    </div>
    <div id="tableauResultat">
        <table class="table table-hover table-striped text-center table-bordered" id="tableauTableResultat">
        <thead>
            <tr id="libelleTableau" class="odd">
            </tr>
        </thead>
        <tbody id="tbodyTableau">
        </tbody>
    </table>
    </div>

    {{ block("modal_bootstrap", "requetes/partial.html.twig") }}
    {{ block("modal_bootstrap_suppression", "requetes/partial.html.twig") }}
    </div>

    <!-- Volet de sélection de requêtes -->
    <div id="volet_clos">
        <div id="volet">
            <p><u> {{'requetes.mes_requetes' |trans}} </u></p>
            <div id="volet2">
            </div>
            <a href="#volet" class="ouvrir" aria-hidden="true">{{'requetes.ma_liste' | trans}}</a>
            <a href="#volet_clos" class="fermer" aria-hidden="true">{{'requetes.ma_liste' | trans}}</a>
        </div>
    </div>

    {% endblock %}

    {% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
    // Ajouter le bouton export CSV/PDF

    $(document).ready(function () {
        // Le document ready
        creerTableAfficherEtCritere();
        $("#exampleModal").css("display","none"); //On cache le modal pour sauvegarderRequete
        $("#exampleModal2").css("display","none"); //On cache le modal pour supprimerRequete
        $("#input_modal").val(''); //On lui met un input vide
        afficherListeRequete();
    });
 
 //C'est la première box
    var formulaire_critere = null;// Variable qui prend le formulaire.
    var formulaire_critere_vide = null; //Variable qui prend le formulaire vide, utilisé dans afficheListeCritere

    var champAfficheVide = $("#liste_affiche").html();
    var champAffiche = null;

    var divTypeDonnee = $("#type_donnee").html();
    var tableauResultat = $("#tableauResultat").html();

    function enleverBoutonEtOu(){
        $(".select_div").first().find(".boutonsEtOu").css("visibility","hidden");
        $(".select_div").first().find(".boutonsEtOu").find(".Et").removeClass("active");
    }

    function remettreBoutonEtOu(){
        $(".select_div").last().find(".boutonsEtOu").css("visibility","visible");
        $(".select_div").last().find(".boutonsEtOu").find(".Et").addClass("active");
    }

    function creerTableAfficherEtCritere() {
        var reqSaveCorps = '{{ reqSaveCorps}}';
        formulaire_critere_vide =  $("#liste_critere").html();
        if(reqSaveCorps != "" )
        {
            //Affichage du message qui dit que la requête est bien enregistrée
            $('#alert_bootstrap').append("<div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">{{ 'requetes.enregistree' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");

            //Affichage du reste (requête)
            chargerRequete(reqSaveCorps);
        }
            enleverBoutonEtOu(); //Pour ne pas qu'ils apparaissent sur le premièr critère
    }

    function afficherListeRequete(){
        //Ajax
        $("#volet2").empty();
        $.ajax({
            url:'{{path('requetes_charger_liste_requete')}}',
            type: "POST",
            success: function(rows)
            {        
                $.each(rows, function (key, row) {
                    $("#volet2").append("<a class=\"listeRequete\" href=\"#\" onclick=\"chargerRequete(" + row.id + ");return false;\">- " + row.tete + "</a> <a href=\"#\" class=\"deleteListeRequete\" onclick=\"changerModal("+ row.id +")\">X</a> <br/>");
                });
            },
            error: function (err)
            {
                $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
                console.log("An error ocurred while loading data ...");
                console.log(err);
            }
        });
    }

    function clearFilters(id) {
        if(id == 1) //Les filtres
        {
            $("#liste_critere").empty();
            ajouterFiltre();
        }
        else //Les champs affichés
        {
            $("#liste_affiche").empty();
            ajouterChampAffiche();
        }
    }

    function executerRequete(){
        var typeDonnee = $("#select_type_donnee").children("option:selected").val(); //Je récupère le type donnée
        var tabRequete = {}; //Objet qui va être envoyé au controller
        var listeNull = []; //Tableau qui va prendre toutes les infos de listeNull
        var listeNullCondition = []; //Les conditions
        var listeNullTable = []; //Les tables à ajouter
        var tabNull = {};
        var quit = false;

        if(typeDonnee == "") //Si le type de donnée n'est pas mis
        {
            $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur_type_donnee' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
            console.log ("Type donnée non renseigné");
            quit = true;
            return false;
        }

        $(".select_div").each(function(index) //Pour chaque div de condition pour la requête
        {
            //Je vérifie que les 3 premières box sont bien remplies
            if( $(this).find(".select_box1").children("option:selected").attr("label") == "-1" || $(this).find(".select_box2").children("option:selected").attr("label") == "-1"  || $(this).find(".select_box3").children("option:selected").attr("label") == "-1" || quit ){
                $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur_critere' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
                console.log ("Un des critère n'est pas complet");
                quit = true;
                return false;
            }

            var tmp = {};

            //Les valeurs dans tabObjets (On se place sur select_box2) 
            var tabObjetValeur = $(this).find(".select_box2").children("option:selected").val(); // le valeur
            var tabObjetI = $(this).find(".select_box2").children("option:selected").attr('label'); // le i de tabObjets['valeur'][i]

            tmp["table"] = tabObjets[tabObjetValeur][tabObjetI].tableSQL;
            tmp["nomBDD"] = tabObjets[tabObjetValeur][tabObjetI].nomBDD;

            //Les valeurs dans tabChoix (On se place sur select_box3)
            var tabChoixValeur =  $(this).find(".select_box3").children("option:selected").val();  // le valeur (type de l'objet)
            var tabChoixI = $(this).find(".select_box3").children("option:selected").attr('label'); // le i de tabChoix['valeur'][i]
            tmp["operator"] = tabChoix[tabChoixValeur][tabChoixI].operator;
            
            //S'il n'y a pas de 4ème box (Ou boolean).
            if(tabChoix[tabChoixValeur][tabChoixI].id == 2 || tabChoix[tabChoixValeur][tabChoixI].id == 7 || tabChoix[tabChoixValeur][tabChoixI].id == 13)
            {
                 tmp["value"] = "IS NULL";
            }
            else if(tabChoix[tabChoixValeur][tabChoixI].id == 14 && tabObjets[tabObjetValeur][tabObjetI].tableNull2 == undefined){ //Le est null d'une liste
                tmp["table"] = tabObjets[tabObjetValeur][tabObjetI].tableNull;
                tmp["nomBDD"] = tabObjets[tabObjetValeur][tabObjetI].nomBDDNull;
                tmp["value"] = "IS NULL";
            }
            else if(tabChoix[tabChoixValeur][tabChoixI].id == 14 && tabObjets[tabObjetValeur][tabObjetI].tableNull2 != undefined && tabObjets[tabObjetValeur][tabObjetI].nomBDDNull2 != undefined){ //Si ça doit passer par une table intermédiaire, les cas spéciaux
                console.log("ok")
                var listeNullTmp = "";

                //Pour mettre le ET/OU au début
                if($(this).find(".boutonsEtOu").find(".active").hasClass("Et")){ //Si c'est le boutton "Et"
                    listeNullTmp = " AND ";
                }
                else if($(this).find(".boutonsEtOu").find(".active").hasClass("Ou")){ //Si c'est le boutton "Ou"
                   listeNullTmp = " OR ";
                }
                else{
                    listeNullTmp = " AND ";
                }

                tmp["table"] = tabObjets[tabObjetValeur][tabObjetI].tableNull;
                tmp["nomBDD"] = tabObjets[tabObjetValeur][tabObjetI].nomBDDNull;
                tmp["table2"] = tabObjets[tabObjetValeur][tabObjetI].tableNull2;
                tmp["nomBDD2"] = tabObjets[tabObjetValeur][tabObjetI].nomBDDNull2;

                listeNullTmp += "NOT EXISTS (SELECT * FROM " + tmp["table"] + " WHERE " + tmp["table"] + "." + tmp["nomBDD"] + " = " + tmp["table2"] + "." + tmp["nomBDD2"] + ") ";
                
                if(tmp["table2"] == "agent"){
                    listeNullTable.push("agent");
                }
                if(tmp["table2"] == "localisation"){
                    listeNullTable.push("localisation");
                }

                listeNullCondition.push(listeNullTmp);
                tmp["table"] = "NULL";
                tmp["nomBDD"] = "NULL";
                tmp["operator"] = "NULL";
                tmp["value"] = "NULL";
            }
            else
            {
                switch(tabChoixValeur)
                {
                    case "0"://Si booleen
                        tmp["value"] = tabChoix[tabChoixValeur][tabChoixI].value;
                        break;
            
                    case "2"://Si liste
                        tmp["value"] = $(this).find(".select_box4").children("option:selected").val();
                        break;

                    default://Si string/number
                        tmp["value"] = $(this).find(".span_box4").children().val();
                        break;
                }
                
                if(tmp["value"] == "" || tmp["value"] == -1) //Si la box4 n'est pas remplie/choisie (Si == -1 c'est le label de veuillez selectionner)
                {
                    $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur_critere' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
                    console.log ("Un des critère n'est pas complet");
                    quit = true;
                    return false;
                }
            }
            listeNull.push(listeNullCondition);
            listeNull.push(listeNullTable);

            if($(this).find(".boutonsEtOu").find(".active").hasClass("Et")){ //Si c'est le boutton "Et"
                tmp["etOu"] = "AND";
            }
            else if($(this).find(".boutonsEtOu").find(".active").hasClass("Ou")){ //Si c'est le boutton "Ou"
                tmp["etOu"] = "OR";
            }
            else{
                tmp["etOu"] = "AND";
            }

            tabRequete["where"+index]=tmp;
        });

        var tabAfficheExec = new Object(); //Tableau qui va contenir les critères d'affichage

        $(".div_champ_affiche").each(function(index){

            if(quit)
            {
                return false;
            }

            //Je vérifie que toutes les box d'affichage soient remplies
            if($(this).find(".select_box_champAffiche_1").children("option:selected").attr("label") == "-1" || $(this).find(".select_box_champAffiche_2").children("option:selected").attr("label") == "-1" || $(this).find(".select_box_champAffiche_3").children("option:selected").attr("label") == "-1")
            {
                $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur_champ_affiche' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
                console.log ("Un des champs à afficher n'est pas complet");
                quit = true;
                return false;
            }

            var tmp = new Object();
            var tabAfficheValeur =  $(this).find(".select_box_champAffiche_2").children("option:selected").val();  // le valeur (type de l'objet)
            var tabAfficheI = $(this).find(".select_box_champAffiche_2").children("option:selected").attr('label'); // le i de tabChoix['valeur'][i]
            tmp["table"] = tabAffiche[tabAfficheValeur][tabAfficheI].tableSQL;
            tmp["nomBDD"] = tabAffiche[tabAfficheValeur][tabAfficheI].nomBDD;

            valOrdre = $(this).find(".select_box_champAffiche_3").children("option:selected").val();
            tmp["ordre"] = valOrdre;

            tabAfficheExec["select"+index]=tmp;
        });
 
        //Vérification qu'il n'y ait pas deux ordres différents
        var tabTmpOrdreCheck = [999999999]; //Déclaration du tableau
        $(".select_box_champAffiche_3").each(function(key){
            if(tabTmpOrdreCheck.indexOf($(this).children("option:selected").val()) != -1){ //Je récupère l'ordre mis, et s'il est dans le tableau j'affiche l'erreur
                $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur_ordre' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
                quit = true;
                console.log ("Deux ou plusieurs champs ont le même ordre");
                return false;
            }
            tabTmpOrdreCheck.push($(this).children("option:selected").val()); //Sinon j'ajotue la valeur
        });

        if(quit) //Si les critères ne sont pas complets ou qu'il y a deux ordres identiques
        {
            return false;
        }

        //Ajax
        $.ajax({
            url:'{{path('requetes_executer')}}',
            type: "POST",
            data: {
                "typeDonnee": typeDonnee,
                "tabRequete": tabRequete,
                "tabAffiche": tabAfficheExec,
                "listeNull": listeNull
            },
            success: function(rep)
            {   
                console.log(rep);
                afficherExecRequete(rep);
            },
            error: function (err)
            {
                $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
                console.log("An error ocurred while loading data ...");
            }
        });
    }

    function afficherExecRequete(rep){

        tabChampAffiche = new Object();
        var i =0;

        $("#infoTableauResultat").empty();
        $("#tableauResultat").empty(); //Je vide la div du tableau
        $(".table-buttons2").empty(); //Je vide là où il y a le bouton export CSV
        $("#tableauResultat").append(tableauResultat); //Je remet un tableau "vide"

        $(".div_champ_affiche").each(function(index){
            tmp = new Object();
            var tabAfficheValeur = $(this).find(".select_box_champAffiche_2").children("option:selected").val();  // le valeur (type de l'objet)
            var tabAfficheI = $(this).find(".select_box_champAffiche_2").children("option:selected").attr('label'); // le i de tabChoix['valeur'][i]

            //Je récupère ce qui a été recherché afin de pouvoir récupérer les données
            tmp["nomBDD"] = tabAffiche[tabAfficheValeur][tabAfficheI].nomBDD;

            //Je récupère aussi le nom pour mettre un libelé correct sur le tableau
            tmp["nom"] = tabAffiche[tabAfficheValeur][tabAfficheI].nom;
            ordreTmp = $(this).find(".select_box_champAffiche_3").children("option:selected").val(); //Je récupère l'ordre
            tabChampAffiche[ordreTmp-1] = tmp; //Je met les élements dans l'ordre, avec un -1 car l'ordre commence à 1 et non à 0
            i++;
        });

        $("#libelleTableau").append("<th scope=\"col\">ID</th>"); //Pour l'esthétique
        for(var j = 0; j < i; j++){ //Je met les libellés dans le tableau
            $("#libelleTableau").append("<th scope=\"col\">" + tabChampAffiche[j]["nom"] + "</th>");
        }
        
        var tabIdUnique = [99999999999]; //Tableau pour savoir le nombre d'id unique
        
        for(var j = 0; j < rep.length; j++){
            $("#tbodyTableau").append("<tr class=\"odd\" id=\"td" + j + "\"></tr>");
            $("#td" + j).append("<th scope=\"row\">" + rep[j]["selectid"] + "</th>"); //Je met le numéro correspondant à l'occurence (Genre 4ème ligne)
            if(!tabIdUnique.includes(rep[j]["selectid"])){ //S'il n'est pas dans le tableau je l'ajoute
                tabIdUnique.push(rep[j]["selectid"]);
            }
            for(var k = 0; k < i; k++){ //Parcours du tabChampAffiche : Pour chaque rep, je récupère toutes ses données
                var donnee = rep[j]["select"+k];
                $("#td" + j).append("<td>" + donnee + "</td>"); //Données que j'insère dans le tableau
            }
        }
        $("#infoTableauResultat").append("<span><p> Nombre de résultats : " + rep.length + " (" + (tabIdUnique.length -1) + " id uniques)</p></span>"); //-1 car il y a le 99999999
        dataTable();
    }

    function dataTable(){
            //DataTable
            var dt = $('#tableauTableResultat').DataTable({
            autoWidth: true,
            lengthChange: true,
            scrollX: false,
            searching: true,
            ordering: true,
            order: [
                [0, 'desc']
            ],
            language: $.parseJSON('{{ "datatable.language"|trans|raw }}'),
            pageLength: 10,
            lengthMenu: [
                [
                    10, 25, 50, -1
                ],
                [
                    10, 25, 50, "{{'datatable.all'|trans}}"
                ]
            ],
            buttons: [{
                extend: 'csv',
                filename: "{{ 'app_name'|trans }}-{{ 'requetes.list'|trans }}",
                text: "{{'generic.export_csv'|trans}}"
            }]
        });

        dt.buttons().container().appendTo('.table-buttons2');
    }

    function sauvegarderRequete(){
        var tabCorpsReq = {};
        var tabTmp = [];
        var quit = false;

       if($("#select_type_donnee").children("option:selected").val() == "") //Si le type de donnée n'est pas mis
        {
                $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur_type_donnee' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
                console.log ("Type donnée non renseigné");
                quit = true;
                return false;
        }

        $(".select_div").each(function(index){
            var tmp = {};
            tmp["box1"] = $(this).find(".select_box1").children("option:selected").text();
            tmp["box2"] = $(this).find(".select_box2").children("option:selected").attr("label");
            tmp["box3"] = $(this).find(".select_box3").children("option:selected").attr("label");
            if(tmp["box1"] == "{{ 'requetes.selection_vide' | trans }}" || tmp["box2"] == "-1" || tmp["box3"] == "-1" || quit) //Si une des trois box n'est pas complétée
            {
                tmp["box1"] == null;
                tmp["box2"] == null;
                tmp["box3"] == null;
                return false;
            }

            if($(this).find(".span_box4").children().length == 0){ //Si c'est égal à 0 (Donc pas de box4)
               tmp["box4"] = "null";
            }
            else
            {
                var tabChoixValeur =  $(this).find(".select_box3").children("option:selected").val();  // le valeur (type de l'objet)
                switch(tabChoixValeur)
                {
                    case "0": //Si boolean
                        tmp["box4"] = "null";
                        break;

                    case "2": //Si liste
                        tmp["box4"] = $(this).find(".select_box4").children("option:selected").attr("label");
                        break;

                    default: //Si string/number
                        tmp["box4"] = $(this).find(".span_box4").children().val();
                        break;
                }
                if(tmp["box4"] == "" || tmp["box4"] == -1) //Si la box4 n'est pas remplie/choisie (Si == -1 c'est le label de veuillez selectionner)
                {
                    tmp["box4"] = null;
                    return false;
                }
            }
 
            //Bouton ET/OU, s'il est visible (Donc on peut le changer)
            if($(this).find(".boutonsEtOu").find(".active").hasClass("Et")){ //Si c'est le boutton "Et"
                tmp["box5"] = "Et";
            }
            else if($(this).find(".boutonsEtOu").find(".active").hasClass("Ou")){ //Si c'est le boutton "Ou"
                tmp["box5"] = "Ou";
            }
            else
            {
                tmp["box5"] = null;
            }

            tabTmp[index] = tmp;
        });

        var tabTmp2 = [];

        $(".div_champ_affiche").each(function(index){
            var tmp = {};
            tmp["box1"] = $(this).find(".select_box_champAffiche_1").children("option:selected").text();
            tmp["box2"] = $(this).find(".select_box_champAffiche_2").children("option:selected").attr("label");
            tmp["box3"] = $(this).find(".select_box_champAffiche_3").children("option:selected").val();
            
            if(quit){
                return false;
            }

            if(tmp["box1"] == "{{ 'requetes.selection_vide' | trans }}" || tmp["box2"] == "{{ 'requetes.selection_vide' | trans }}") //Si une des trois box n'est pas complétée
            {
                tmp["box1"] = null;
                tmp["box2"] = null;
                tmp["box3"] = null;
                return false;
            }
            tabTmp2[index] = tmp;
        });

         if(quit) //Si les critères, les champ affiche ou le type de donnee ne sont pas complets
        {
            return;
        }

        tabCorpsReq[0] = $("#select_type_donnee").children("option:selected").val(); //J'insère'le type donnée
        tabCorpsReq[1] = tabTmp; //J'insère les critères
        tabCorpsReq[2] = tabTmp2; //J'insère les champ affiche
        
        tabCorpsReq = JSON.stringify(tabCorpsReq);

        //Choper l'input du modal
        var nomReq = $("#input_modal").val();//Je récupère la valeur de l'input, on get le nom de la requête
        $("#exampleModal").css("display","none"); //On cache le modal
        
        if (nomReq == null || nomReq == "") {//Si il n'y a pas de nom ou que le nom est vide
            $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur_nom_requete' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
            return;
        }

        //Formulaire
        $("#form_Lib").attr("value", nomReq); 
        $("#form_Corps").attr("value", tabCorpsReq);
        $("#formEnrReq").submit();
    }

    function changerModal(idReq){
        $("#confirmationModalSuppression").attr("onclick","supprimerRequete("+idReq+")"); //Je mets ça sur le bouton de confirmation
        $("#exampleModal2").modal(); //Je show le modal

    }

    function supprimerRequete(idReq){
         $.ajax({
                url:'{{path('requetes_supprimer_requete')}}',
                type: "POST",
                data: {
                    "idReq": idReq
                },
                success: function(corps)
                {
                    afficherListeRequete(); //Je mets à jour l'affichage de la liste des requêtes
                    $('#alert_bootstrap').append("<div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">{{ 'requetes.supprimee' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
                },
                error: function (err)
                {
                    //Affichage d'une erreur à l'utilisateur
                    $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
                    console.log("An error ocurred while loading data ...");
                    console.log(err);
                }
        });
        
    }

    function chargerRequete(idReq){
         $.ajax({
                url:'{{path('requetes_charger_requete')}}',
                type: "POST",
                data: {
                    "idReq": idReq
                },
                success: function(corps)
                {
                    afficherChargerRequete(corps);
                },
                error: function (err)
                {
                    //Affichage d'une erreur à l'utilisateur
                    $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
                    console.log("An error ocurred while loading data ...");
                    console.log(err);
                }
        });
    }

    function afficherChargerRequete(corps){
        var tabCorps = JSON.parse(corps);
        
        //Pour le type donnee
        $("#typeDonnee").empty();
        $("#typeDonnee").append(divTypeDonnee);
        $("#select_type_donnee").find(`[selected="selected"]`).removeAttr("selected");//Je chope celui qui à l'attribut "selected" et je le vire
        $("#select_type_donnee").find(`[value="`+tabCorps[0]+`"]`).attr("selected","selected");
        
        //Pour les critères
        if(tabCorps[1].length == 0){ 
            $("#liste_critere").empty(); //Je vide la selection en cours
            $("#liste_critere").append(formulaire_critere_vide); //Je met un truc vide
            afficheListeCritere("#select_type_donnee");
        }
        else{ //Si l'utilisateur a rempli au moins un critère

            //Je fais ça une première fois ici pour sauvegarder le champAffiche, sinon il me prend autant de div qu'il y en a
            $("#liste_critere").empty();
            $("#liste_critere").append(formulaire_critere_vide); //Je remet un select_box1 pour le afficheListeCritere
            afficheListeCritere($("#select_type_donnee"));

            for(var i = 0;i < tabCorps[1].length-1; i++){//J'ajoute autant de div qu'il y a de critères
                $("#liste_critere").append(formulaire_critere);
            }

            $(".select_div").each(function(index){//Je remplis les divs avec ce qui a été sauvegardé
                var tabBox1 = tabCorps[1][index]["box1"].toLowerCase().replace(/é|è|ê/g,"e");

                //Box1
                $(this).find(".select_box1").find(`[selected="selected"]`).removeAttr("selected");//Je chope celui qui à l'attribut "selected" et je le vire
                $(this).find(".select_box1").find(`[value="`+tabBox1+`"]`).attr("selected","selected"); //Je mets le selected sur le bon

                //Box2
                remplirSecondeBox(tabBox1, $(this).find(".select_box2")); //Je remplis la seconde box avec les termes qui correspondent
                $(this).find(".select_box2").find(`[selected="selected"]`).removeAttr("selected"); //Je chope celui qui à l'attribut "selected" et je le vire
                $(this).find(".select_box2").find(`[label="`+tabCorps[1][index]["box2"]+`"]`).attr("selected","selected"); //Je mets le selected sur le bon, par rapport au label

                //Box 3 
                remplirTroisiemeBox(tabObjets[tabBox1][tabCorps[1][index]["box2"]].type, $(this).find(".select_box3"));
                $(this).find(".select_box3").find(`[selected="selected"]`).removeAttr("selected"); //Je chope celui qui à l'attribut "selected" et je le vire
                $(this).find(".select_box3").find(`[label="`+tabCorps[1][index]["box3"]+`"]`).attr("selected","selected"); //Je mets le selected sur le bon

                //Box 4
                var valeur =  $(this).find(".select_box3").find(`[selected="selected"]`).val();//Le val correspond à la valeur de l'élément (String, number, liste...)
                var idTabChoix = tabChoix[valeur][tabCorps[1][index]["box3"]].id;
                remplirQuatriemeBox(valeur, idTabChoix, $(this).find(".span_box4"), $(this).find(".select_box3"));
                
                    //Traitement en fonction de la box3
                if(valeur == "1" || valeur =="3") //Si c'est un input
                {
                    $(this).find(".input_req").val(tabCorps[1][index]["box4"]);
                }
                else if(valeur =="2") //Si c'est une liste
                {
                    $(this).find(".select_box4").find(`[selected="selected"]`).removeAttr("selected");
                    var me = $(this);
                    $(this).find(".select_box4").on('dataloaded', function(){
                        me.find(".select_box4").find(`[label="`+tabCorps[1][index]["box4"]+`"]`).attr("selected","selected");
                    })
                }

                //Les bouttons ET/OU
                if(tabCorps[1][index]["box5"] != null){
                    $(this).find(".boutonsEtOu").find(".active").removeClass("active"); //J'enlève l'active actuel
                    $(this).find(".boutonsEtOu").find("."+tabCorps[1][index]["box5"]+"").addClass("active"); //Je le remplace par celui de l'user
                    $(this).find(".boutonsEtOu").css("visibility","visible");
                }
            });
        }

        //Pour les champ affiche

        if(tabCorps[2].length == 0 ) { //Si l'utilisateur a mis au moins un champAffiche
            $("#liste_affiche").empty();
            $("#liste_affiche").append(champAfficheVide);
            afficherListeChampAffiche($("#select_type_donnee"));
        }
        else{

            //Je fais ça une première fois ici pour sauvegarder le champAffiche, sinon il me prend autant de div qu'il y en a
            $("#liste_affiche").empty();
            $("#liste_affiche").append(champAfficheVide);
            afficherListeChampAffiche($("#select_type_donnee"));

            for(var i = 0;i < tabCorps[2].length-1; i++){//J'ajoute autant de div qu'il y a de critères
                $("#liste_affiche").append(champAffiche);
            }

            $(".div_champ_affiche").each(function(index){

                //Box 1
                var tabBox1 = tabCorps[2][index]["box1"].toLowerCase().replace(/é|è|ê/g,"e");
                if(tabBox1 == "localisation de l'agent") tabBox1 = "localisation_agent";

                $(this).find(".select_box_champAffiche_1").find(`[selected="selected"]`).removeAttr("selected");//Je chope celui qui à l'attribut "selected" et je le vire
                $(this).find(".select_box_champAffiche_1").find(`[value="`+tabBox1+`"]`).attr("selected","selected"); //Je mets le selected sur le bon

                //Box 2
                remplirSecondeBoxChampAffiche(tabBox1,$(this).find(".select_box_champAffiche_2"))
                $(this).find(".select_box_champAffiche_2").find(`[selected="selected"]`).removeAttr("selected");//Je chope celui qui à l'attribut "selected" et je le vire
                $(this).find(".select_box_champAffiche_2").find(`[label="`+tabCorps[2][index]["box2"]+`"]`).attr("selected","selected"); //Je mets le selected sur le bon

                //Box 3
                for(var i = 1;i < tabCorps[2].length+1; i++){
                    $(this).find(".select_box_champAffiche_3").append("<option value=" + i +">" + i + "</option>");
                }
                $(this).find(".select_box_champAffiche_3").find(`[selected="selected"]`).removeAttr("selected");//Je chope celui qui à l'attribut "selected" et je le vire
                $(this).find(".select_box_champAffiche_3").find(`[value="`+tabCorps[2][index]["box3"]+`"]`).attr("selected","selected"); //Je mets le selected sur le bon
                $(this).find(".select_box_champAffiche_3").css("visibility","visible");
            });
        }
    }

    function dupliquer(currentElement){
        $(currentElement).parent().clone().appendTo("#liste_critere");
        $("#liste_critere").append("<br/>");
        remettreBoutonEtOu();
    }

    function ajouterFiltre() {
        if(formulaire_critere == null) //Si un type de donnée n'est pas sélectionné
        {                      
            $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur_type_donnee' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
            console.log("Type donnée incomplet");
            return;
        }
        else
        {
        $("#liste_critere").append(formulaire_critere);
        enleverBoutonEtOu();
        return;
        }
    }

    function ajouterChampAffiche(){
        if($("#select_type_donnee").children("option:selected").attr("label") == -1){
            $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur_type_donnee' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
            console.log("Type donnée incomplet");
            return;
        }
        $("#liste_affiche").append(champAffiche);
        return;
    }

    function removeFiltre(currentElement) { // Par rapport au bouton supprimer
        $(currentElement).parent().next().remove(); // Le br
        $(currentElement).parent().remove(); // La div
        if($(currentElement).hasClass("btn_suppr_champAffiche"))
        {
            changerTroisiemeBoxChampAffiche();
        }
        enleverBoutonEtOu();
        return;
    }

    function selectTypeDonnee(currentElement){
        $("#liste_critere").empty(); //Je vide les critères
        $("#liste_affiche").empty(); //Je vide l'affichage
        $("#liste_critere").append(formulaire_critere_vide); //Je remets simplement une box vide
        $("#liste_affiche").append(champAfficheVide); //Je remets simplement une box vide
        changerSelected(currentElement); //On change le select de typeDonnee
        afficheListeCritere(currentElement);
        afficherListeChampAffiche(currentElement);
    }

    function afficherListeChampAffiche(currentElement){

            //Change l'affichage en fonction de la sélection
            var typeDonnee = $(currentElement).children("option:selected").attr("value"); //Je récupère le typeDonnee
            var selectChampAffiche1 = $("#liste_affiche").find(".select_box_champAffiche_1");

            $(selectChampAffiche1).append("<option value=\"attestation\">{{ 'attestation.name' | trans }}</option>"); //Ce qui est commun aux trois
            $(selectChampAffiche1).append("<option value=\"element\">{{ 'element.name' | trans }}</option>"); //Ce qui est commun aux trois
            switch(typeDonnee){
                case "Attestation":
                        $(selectChampAffiche1).append("<option value=\"agent\">{{ 'requetes.agent_name' | trans }}</option>");
                        $(selectChampAffiche1).append("<option value=\"datation\">{{ 'generic.fields.datation' | trans }}</option>");
                        $(selectChampAffiche1).append(" <option value=\"localisation_agent\">{{ 'requetes.localisation_agent' | trans }}</option>");
                    break;
       
                case "Element":
                        $(selectChampAffiche1).append("<option value=\"biblio\">{{ 'nav.bibliography' | trans }}</option>");
                    break;
                case "Source":
                    $(selectChampAffiche1).append("<option value=\"biblio\">{{ 'nav.bibliography' | trans }}</option>");
                    $(selectChampAffiche1).append("<option value=\"datation\">{{ 'generic.fields.datation' | trans }}</option>");
                    break;
            }
            $(selectChampAffiche1).append("<option value=\"localisation\">{{ 'generic.fields.localisation' | trans }}</option>"); //Ce qui est commun aux trois
            $(selectChampAffiche1).append("<option value=\"source\">{{ 'source.name' | trans }}</option>"); //Ce qui est commun aux trois
            champAffiche = $("#liste_affiche").html();
    }

    function afficheListeCritere(currentElement){

            //Change les critères en fonction de la sélection
            var typeDonnee = $(currentElement).children("option:selected").attr("value"); //Je récupère le typeDonnee
            var selectBox1 = $("#liste_critere").find(".select_box1"); //Je récupère la première selectBox

            switch(typeDonnee){
                case "Attestation":
                    $(selectBox1).append("<option value=\"agent\">{{ 'requetes.agent_name' | trans }}</option>");
                    $(selectBox1).append("<option value=\"attestation\">{{ 'attestation.name' | trans }}</option>");
                    $(selectBox1).append("<option value=\"datation\">{{ 'generic.fields.datation' | trans }}</option>");
                    $(selectBox1).append("<option value=\"element\">{{ 'element.name' | trans }}</option>");
                    $(selectBox1).append("<option value=\"source\">{{ 'source.name' | trans }}</option>");
                    break;
                
                case "Element":
                    $(selectBox1).append("<option value=\"attestation\">{{ 'attestation.name' | trans }}</option>");
                    $(selectBox1).append("<option value=\"element\">{{ 'element.name' | trans }}</option>");
                    $(selectBox1).append("<option value=\"source\">{{ 'source.name' | trans }}</option>");
                    break;

                case "Source":        
                    $(selectBox1).append("<option value=\"attestation\">{{ 'attestation.name' | trans }}</option>");
                    $(selectBox1).append("<option value=\"datation\">{{ 'source.sections.datation' | trans }}</option>");
                    $(selectBox1).append("<option value=\"element\">{{ 'element.name' | trans }}</option>");
                    $(selectBox1).append("<option value=\"source\">{{ 'source.name' | trans }}</option>");
                    break;
            }
            $(selectBox1).append("<option value=\"localisation\">{{ 'generic.fields.localisation' | trans }}</option>"); //Est commun aux trois
            formulaire_critere = $("#liste_critere").html();
            enleverBoutonEtOu();
    }

    function changerSelected(currentElement){//Permet de changer le selected. Est appelé dans toutes les box, y compris dans le select de la requête ajax de la quatriemeBox
        $(currentElement).find(`[selected="selected"]`).removeAttr("selected");//Je chope celui qui à l'attribut "selected" et je le vire
        $(currentElement).children("option:selected").attr("selected","selected");//Je mets l'attribut selected pour celui qui est selectionné
        return;
    }

    function changerTroisiemeBoxChampAffiche()
    {       
        var nombreBox = $('.select_box_champAffiche_2').children("option:selected").not(".disabled_selected").length; //Tous ceux qui ont fait un choix dans la seconde box
        var key2 = 0; //Variable qui sert pour les selected, qui s'incrémente dès qu'une box2 est ok
        
        $(".select_box_champAffiche_3").each(function (key) { // Boucle qui permet de changer toutes les 3èmes box à chaque ajout
            var selectChampAffiche2 = $(this).parent().prev().find(".select_box_champAffiche_2"); //Le select_box_champAffiche_2
            var valeurOptionSelected = $(this).children("option:selected").val(); //L'option selected actuel
            if(!(selectChampAffiche2.children("option:selected").hasClass("disabled_selected")) && selectChampAffiche2.children().length) //Je vérifie bien qu'il ait rempli la box2 avant d'afficher la box3 (Si le selected n'est pas le truc par défaut)
            {//Et aussi si le box2 existe (.length)
                key2++;
                $(this).empty();
                for(var i = 1; i <= nombreBox; i++){
                    if(key2==i) //Pour mettre le chiffre 4 pour le 4ème champ par exemple
                    {
                        $(this).append("<option selected=\"selected\" value=" + i +">" + i + "</option>");
                    }
                    else
                    {
                        $(this).append("<option value=" + i +">" + i + "</option>");
                    }
                }

                //Je fais en sorte de remettre le selected qu'il y avait avant
                if(!(valeurOptionSelected === undefined))
                {
                    $(this).find(`[selected="selected"]`).removeAttr("selected");//Je chope celui qui à l'attribut "selected" et je le vire
                    $(this).find(`[value="`+valeurOptionSelected+`"]`).attr("selected","selected");
                }
                $(this).css("visibility","visible"); 
            }
        });
    }

    function secondeBoxChampAffiche(currentElement){
        changerSelected(currentElement);
        var box2 = $(currentElement).parent().next().find(".select_box_champAffiche_2");
        $(box2).empty(); // Il faut vider le HTML de la seconde box sinon ça ajoute
        var box3 = $(box2).parent().next().find(".select_box_champAffiche_3");
        $(box3).css("visibility","hidden");
        var valeurSelect = $(currentElement).children("option:selected").val();
        remplirSecondeBoxChampAffiche(valeurSelect,box2);
    }

    function remplirSecondeBoxChampAffiche(valeur,box){
        $(box).append("<option class=\"disabled_selected\" value=\"\" label=\"-1\" selected=\"selected\" disabled=\"disabled\">{{ 'requetes.selection_vide' | trans }}</option>");
        $(box).css("visibility","visible");
        $.each(tabAffiche, function (j, obj) { // On parcourt le tableau JSON
            if (j == valeur) { // On vérifie que ça corresponde bien à ce qu'il y a dans la box 1
                for (var i = 0; i < obj.length; i++) { // Boucle for pour afficher tous les objets
                    $(box).append("<option value=\"" + valeur + "\" label=\"" + i + "\">" + obj[i].nom + " </option>"); // value="valeur", label="i". J'envoie ça pour pouvoir récupérer les valeurs dans le tabObjetsaprès
                }
            }
        })
    }

    function troisiemeBoxChampAffiche(currentElement){
        changerSelected(currentElement);
        var box3 = $(currentElement).parent().next().find(".select_box_champAffiche_3");
        changerTroisiemeBoxChampAffiche();
    }

    function secondeBox(currentElement) { // Pour le onchange de la première box
        var valeurSelect = $(currentElement).children("option:selected").val();
        changerSelected(currentElement);
        var box2 = $(currentElement).parent().next().find(".select_box2");
        var box3 = $(box2).parent().next().find(".select_box3"); // On doit aussi vider la 3ème box + la mettre en hidden
        box3.css("visibility", "hidden"); // On le cache, car il doit obligatoirement saisir la seconde box avant de pouvoir toucher à la 3ème
        var box4 = $(box3).parent().next(); // On doit aussi vider la 4ème box (Input text, liste ou input number)
        $(box4).empty();
        changerSelected(box2);
        remplirSecondeBox(valeurSelect, box2);
        return;
    }

    function remplirSecondeBox(valeur, box) { // Afficher les <option> par rapport à la première box, sur la seconde box
        $(box).empty(); // Il faut vider le HTML de la seconde box sinon ça ajoute
        $(box).append("<option value=\"\" label=\"-1\" selected=\"selected\" disabled=\"disabled\">{{ 'requetes.selection_vide' | trans }}</option>");
        $.each(tabObjets, function (j, obj) { // On parcourt le tableau JSON
            if (j == valeur) { // On vérifie que ça corresponde bien à ce qu'il y a dans la box 1
                for (var i = 0; i < obj.length; i++) { // Boucle for pour afficher tous les objets
                    $(box).append("<option value=\"" + valeur + "\" label=\"" + i + "\">" + obj[i].nom + " </option>"); // value="valeur", label="i". J'envoie ça pour pouvoir récupérer les valeurs dans le tabObjetsaprès
                }
            }
        }),
        box.css("visibility", "visible"); // On affiche le second select
        return;
    }

    function troisiemeBox(currentElement) { // Pour le onchange de la seconde box
        var valeurTabObjet = $(currentElement).children("option:selected").val(); // le valeur
        var iValeurTabObjet = $(currentElement).children("option:selected").attr('label'); // le i de tabObjets['valeur'][i]
        changerSelected(currentElement);
        var box3 = $(currentElement).parent().next().find(".select_box3");
        var box4 = $(box3).parent().next(); // On doit aussi vider la 4ème box (Input text, liste ou input number)
        $(box4).empty();
        remplirTroisiemeBox(tabObjets[valeurTabObjet][iValeurTabObjet].type, box3);
        return;
    }

    function remplirTroisiemeBox(valeur, box) {
        $(box).empty(); // Il faut vider le HTML de la box sinon ça ajoute
        $(box).append("<option value=\"\" label=\"-1\" selected=\"selected\" disabled=\"disabled\">{{ 'requetes.selection_vide' | trans }}</option>");
        $.each(tabChoix, function (j, obj) { // On parcourt le tableau JSON
            if (j == valeur) { // On vérifie que ça corresponde bien à ce qu'il y a dans la box 1
                for (var i = 0; i < obj.length; i++) { // Boucle for pour afficher tous les objets
                    $(box).append("<option value=\"" + valeur + "\" label=\"" + i + "\">" + obj[i].nom + " </option>"); // <option value="valeur"> obj[i].nom </option>
                }
            }
        });
        box.css("visibility", "visible"); // On affiche le second select
        return;
    }

    function quatriemeBox(currentElement) {// Pour le onchange de la troisieme box
        var valeur = $(currentElement).children("option:selected").val();//Le val correspond à la valeur de l'élément (String, number, liste...)
        var tmp = $(currentElement).children("option:selected").attr('label');//L'attribut label, qui contient la place [i] dans le tabChoix
        var idTabChoix = tabChoix[valeur][tmp].id;
        changerSelected(currentElement);
        var box4 = $(currentElement).parent().next();//On se place sur le span
        remplirQuatriemeBox(valeur, idTabChoix, box4, currentElement);
    }

    function remplirQuatriemeBox(valeur, id, box, currentElement) {
        $(box).empty();//On le vide avant d'ajouter quoi que ce soit
        var valeurTabObjet = $(currentElement).parent().parent().find(".select_box2").children("option:selected").val();
        var iValeurTabObjet = $(currentElement).parent().parent().find(".select_box2").children("option:selected").attr('label'); // le i de tabObjets['valeur'][i]
       
        switch (valeur) {
            case "1":
                if (id != 7) { // estNul
                    $(box).append("<input type=\"text\" required class=\"text_input input_req\">"); // Text input classique (String)

                    if(tabObjets[valeurTabObjet][iValeurTabObjet].nomBDD == "extrait_avec_restitution"){ //Pour implémenter le semeitic Keyboard
                        $(box).find(".text_input").semiticKeyboard();
                    }
                }
                break;

            case "2" :
                if(id == 14 )//Si c'est une sauvegarde de requête ou que c'est null
                {
                    break;
                }

                $(box).append("<select name=\"select_box4\" class=\"select_box4\" onchange=\"changerSelected(this)\"> </select>"); // On ajout le select
                var selectBox4 = $(box).children();// Le select_box4
                $(selectBox4).append("<option value=\"\" label=\"-1\" selected=\"selected\" disabled=\"disabled\">{{ 'requetes.selection_vide' | trans }}</option>");

                var nomBDD = tabObjets[valeurTabObjet][iValeurTabObjet].nomBDD;
                var nomTable = tabObjets[valeurTabObjet][iValeurTabObjet].table;

                //Ajax
                $.ajax({
                    url:'{{path('requetes_list_comboBox')}}',
                    type: "POST",
                    data: {
                        "nomBDD": nomBDD,
                        "nomTable": nomTable
                    },
                    success: function(rows)
                    {
                        $.each(rows, function (key, row) {
                                $(selectBox4).append("<option label=\""+key+"\">" + row.nom + "</option>"); //On met les options avec le nom
                        });
                        $(selectBox4).trigger('dataloaded');
                    },
                    error: function (err)
                    {
                        $('#alert_bootstrap').append("<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">{{ 'requetes.erreur' | trans }}<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>");
                        console.log("An error ocurred while loading data ...");
                        console.log(err);
                    }
                })
                break;

            case "3":
                if (id != 13) { // estNul
                    $(box).append("<input required id=\"number_input\" class=\"number_input input_req\">"); // Text input avec uniquement des nombres (int)
                    var numInp =  document.getElementsByClassName('number_input'); //Je récupère tous les number_input
                    for(var i = 0; i< numInp.length; i++){
                        setInputFilter(numInp[i], function (value) { //Je les affecte à la fonction
                             return /^-?\d*$/.test(value);
                        });
                    }
                }
                break;
        }
    }
  
    function setInputFilter(textbox, inputFilter) { // Fonction qui fait en sorte de n'accepter que les chiffres, positifs ou négatifs
        [
            "input",
            "keydown",
            "keyup",
            "mousedown",
            "mouseup",
            "select",
            "contextmenu",
            "drop"
        ].forEach(function (event) {
            textbox.addEventListener(event, function () {
                if (inputFilter(this.value)) {
                    this.oldValue = this.value;
                    this.oldSelectionStart = this.selectionStart;
                    this.oldSelectionEnd = this.selectionEnd;
                } else if (this.hasOwnProperty("oldValue")) {
                    this.value = this.oldValue;
                    this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                }
            });
        });
    }

    // Type : Booléen(0), String/Text(1), Liste(2), Number(3),Lien existe(4) -> Si le lien existe entre telle et telle table, en soi juste une jointure
    // Tableau pour les box3
    {% set tabChoix %}
        {% include "requetes/tabChoix.json" %}
    {% endset %}
    var tabChoix = JSON.parse('{{ tabChoix|replace({"\n": "", "\r\n": "", "\t": "", "\n\r": ""})|raw }}');
    
    
    // Type : Booléen(0), String/Text(1), Liste(2), Number(3),Lien existe(4) -> Si le lien existe entre telle et telle table, en soi juste une jointure
    //Tableau pour le box2
    {% set tabObjets %}
        {% include "requetes/tabObjets.json" %}
    {% endset %}

    var tabObjets = JSON.parse('{{ tabObjets|replace({"\n": "", "\r\n": "", "\t": "", "\n\r": ""})|raw }}');

    // Type : Booléen(0), String/Text(1), Liste(2), Number(3),Lien existe(4) -> Si le lien existe entre telle et telle table, en soi juste une jointure
    //Tableau pour le box2
    {% set tabAffiche %}
        {% include "requetes/tabAffiche.json" %}
    {% endset %}

    var tabAffiche = JSON.parse('{{ tabAffiche|replace({"\n": "", "\r\n": "", "\t": "", "\n\r": ""})|raw }}');

</script>
{% endblock %}