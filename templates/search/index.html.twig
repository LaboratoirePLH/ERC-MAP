{% extends 'page.html.twig' %}
{% block title %}
{{ ('search.title')|trans }}
{% endblock %}
{% block stylesheets %}
{{ encore_entry_link_tags('search_page') }}
{% endblock %}
{% block content %}
<div class="row my-3">
    <div class="col-sm-12 col-md-8 text-center" id="search-panel">
        <ul class="nav nav-pills nav-fill" id="searchTabLinks" role="tablist">
            <li class="nav-item">
                <a class="nav-link font-weight-bolder active" id="simple-tab" data-toggle="tab" href="#simple"
                    role="tab" aria-controls="simple" aria-selected="true">
                    {{ ('search.simple')|trans }}
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link font-weight-bolder" id="guided-tab" data-toggle="tab" href="#guided" role="tab"
                    aria-controls="guided" aria-selected="false">
                    {{ ('search.guided')|trans }}
                </a>
            </li>
            <li class="nav-item d-none">
                <a class="nav-link font-weight-bolder" id="advanced-tab" data-toggle="tab" href="#advanced" role="tab"
                    aria-controls="advanced" aria-selected="false">
                    {{ ('search.advanced')|trans }}
                </a>
            </li>
            <li class="nav-item d-none">
                <a class="nav-link font-weight-bolder" id="elements-tab" data-toggle="tab" href="#elements" role="tab"
                    aria-controls="elements" aria-selected="false">
                    {{ ('search.elements')|trans }}
                </a>
            </li>
        </ul>
        <div class="tab-content" id="searchTabs">
            <div class="tab-pane fade p-3 show active" id="simple" role="tabpanel" aria-labelledby="simple-tab">
                <form action="{{ url('search_simple') }}" class="form-inline" method="post">
                    <input class="form-control form-control-lg mx-2 flex-grow-1" type="text" name="search_value"
                        placeholder="" />
                    <button class="btn btn-primary mx-2" type="submit" name="search">
                        <i class="fas fa-search fa-fw"></i>
                        {{ 'generic.search'|trans }}
                    </button>
                </form>
            </div>
            <div class="tab-pane fade p-3" id="guided" role="tabpanel" aria-labelledby="guided-tab">
                <form action="{{ url('search_guided') }}" method="post">
                    <div class="form-group row">
                        <label for="inputName"
                            class="col-sm-2 col-form-label">{{ ('generic.fields.nom')|trans }}</label>
                        <div class="col-sm-8">
                            <select class="form-control autocomplete" name="names[]" id="inputName" size="1" multiple
                                data-placeholder="{{('autocomplete.select_multiple')|trans}}">
                                <option value></option>
                            </select>
                        </div>
                        <div class="col-sm-2">
                            <div class="custom-control custom-switch pt-2">
                                <input type="checkbox" class="custom-control-input" id="names_mode" name="names_mode"
                                    value="all">
                                <label class="custom-control-label"
                                    for="names_mode">{{ 'generic.fields.require_all'|trans }}</label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="inputLanguage"
                            class="col-sm-2 col-form-label">{{ ('generic.fields.langue')|trans }}</label>
                        <div class="col-sm-8">
                            <select class="form-control autocomplete" name="languages[]" id="inputLanguage" size="1"
                                multiple data-placeholder="{{('autocomplete.select_multiple')|trans}}">
                                <option value></option>
                            </select>
                        </div>
                        <div class="col-sm-2">
                            <div class="custom-control custom-switch pt-2">
                                <input type="checkbox" class="custom-control-input" id="languages_mode"
                                    name="languages_mode" value="all">
                                <label class="custom-control-label"
                                    for="languages_mode">{{ 'generic.fields.require_all'|trans }}</label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label">{{ ('generic.fields.datation')|trans }}</label>
                        <div class="col">
                            <input type="number" step="1" class="form-control" name="datation[post_quem]"
                                id="inputPostQuem" placeholder="{{('datation.fields.post_quem')|trans}}">
                        </div>
                        <div class="col">
                            <input type="number" step="1" class="form-control" name="datation[ante_quem]"
                                id="inputAnteQuem" placeholder="{{('datation.fields.ante_quem')|trans}}">
                        </div>
                        <div class="col-sm-2">
                            <div class="custom-control custom-switch pt-2">
                                <input type="checkbox" class="custom-control-input" id="inputDatationExact"
                                    name="datation[exact]" value="datation_exact" checked>
                                <label class="custom-control-label" for="inputDatationExact">
                                    {{ ('generic.fields.strict')|trans }}
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="inputLocation"
                            class="col-sm-2 col-form-label">{{ ('generic.fields.lieu')|trans }}</label>
                        <div class="col-sm-10">
                            <select class="form-control autocomplete" name="locations[]" id="inputLocation" size="1"
                                multiple data-placeholder="{{('autocomplete.select_multiple')|trans}}">
                                <option value></option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="inputSourceType" class="col-sm-2 col-form-label">{{ ('source.name')|trans }}</label>
                        <div class="col-sm-10">
                            <select class="form-control autocomplete" name="sourceTypes[]" id="inputSourceType" size="1"
                                multiple data-placeholder="{{('autocomplete.select_multiple')|trans}}">
                                <option value></option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="inputAgents" class="col-sm-2 col-form-label">{{ ('agent.name')|trans }}</label>
                        <div class="col-sm-10">
                            <select class="form-control autocomplete" name="agents[]" id="inputAgents" size="1" multiple
                                data-placeholder="{{('autocomplete.select_multiple')|trans}}">
                                <option value></option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-10">
                            <button class="btn btn-secondary btn-sm mx-2" type="reset" name="reset"
                                class="reset-button">
                                <i class="fas fa-eraser fa-fw"></i>
                                {{ 'generic.clear'|trans }}
                            </button>
                            <button class="btn btn-primary mx-2" type="submit" name="search">
                                <i class="fas fa-search fa-fw"></i>
                                {{ 'generic.search'|trans }}
                            </button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="tab-pane fade d-none" id="advanced" role="tabpanel" aria-labelledby="advanced-tab">
                Recherche avancée
            </div>
            <div class="tab-pane fade d-none" id="elements" role="tabpanel" aria-labelledby="elements-tab">
                Recherche éléments
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-4">
        <ul class="nav nav-pills nav-fill" id="myTab" role="tablist">
            <li class="nav-item">
                <a class="nav-link text-white background-map-grey" role="tab">
                    {{ ('search.saved_queries')|trans }}
                </a>
            </li>
        </ul>
        <div class="tab-content overflow-auto" id="savedQueriesTab" style="max-height: 200px; ">
            <div class="tab-pane show active" role="tabpanel">
                <ul class="list-group list-group-flush">
                    {% for query in saved_queries %}
                    {% include "search/_saved_query.html.twig" with {'query': query} only %}
                    {% endfor %}
                </ul>
            </div>
        </div>
    </div>
</div>
{% if is_granted('ROLE_ADMIN') %}
<hr />
<div class="row">
    <div class="col-12 text-center">
        <button type="button" class="btn my-1 btn-danger" id="search-reindex" data-toggle="modal"
            data-target="#search-reindex-modal">
            <i class="fas fa-fw fa-sync"></i>
            {{ 'search.reindex'|trans }}
        </button>
        {% include "modals/confirmation.html.twig" with {
            'modalName': 'confirm_search_reindex',
            'uuid': 'search-reindex-modal',
            'targetUrl': url('search_reindex'),
            'confirmationLabel': 'generic.confirm',
            'useForm': false
        } %}
        <a href="{{ url('search_clear_cache') }}" class="btn btn-danger">
            <i class="fas fa-fw fa-trash"></i>
            {{ 'search.clear_cache'|trans }}
        </a>
    </div>
</div>
{% endif %}

{% endblock %}
{% block javascripts %}
{{ parent() }}
{{ encore_entry_script_tags('search_page') }}
<script type="text/javascript">
    $(document).ready(function () {
        changeMode = function (mode) {
            // Show given tab
            $('#searchTabLinks a[href="#' + mode + '"]').tab('show');
            // Update current URL hash
            window.location.hash = '#' + mode;
            // Adjust height of saved queries block
            adjustSavedQueriesHeight(mode);
        };

        adjustSavedQueriesHeight = function (currentMode) {
            if (currentMode === "simple") {
                $("#savedQueriesTab").animate({
                    maxHeight: '200px'
                }, 500);
            } else {
                var height = $('div.tab-pane#' + currentMode).outerHeight();
                $("#savedQueriesTab").animate({
                    maxHeight: height + 'px'
                }, 500);
            }
        };

        populateCriteriaData = function (mode, data) {
            if (mode === "simple") {
                $('#simple').find('input[name="search_value"]').val(data[0]);
            }
            else if (mode === "guided") {
                $('#guided').find('button[type=reset]').click();
                $.each(data, function (criteria, value) {
                    switch (criteria) {
                        case 'names':
                        case 'languages':
                        case 'locations':
                        case 'sourceTypes':
                        case 'agents':
                            $('#guided').find('select[name="' + criteria + '[]"]')
                                .val(value)
                                .trigger('chosen:updated');
                            break;
                        case 'datation':
                            $('#guided').find('input[name="datation[post_quem]"]').val(value.post_quem);
                            $('#guided').find('input[name="datation[ante_quem]"]').val(value.ante_quem);
                            $('#guided').find('input[name="datation[exact]"]').attr('checked', value.exact === "datation_exact");
                            break;
                        case 'names_mode':
                        case 'languages_mode':
                            if (value === "all") {
                                $('#guided').find('input[name="' + criteria + '"]').attr('checked', true);
                            }
                            break;
                    }
                });
            }
        }

        loadCriteria = function (criteriaName, target, optgroups) {

            var createOptions = function (data, select) {
                Object.entries(data)
                    .sort((a, b) => removeAccents(a[1]).localeCompare(removeAccents(b[1])))
                    .forEach(([value, label]) => {
                        select.append(
                            $('<option />').attr('value', value).html(label)
                        );
                    });
            }

            var url = "{{ url('search_criteria', {'criteriaName': '_crit_'})|raw }}".replace('_crit_', criteriaName);
            target.parent().append($('<div class="spinner-border chosen-spinner" role="status"></div>'));
            $.get(url)
                .done(function (response) {
                    //console.log(criteriaName, response.data);
                    if (optgroups !== undefined) {
                        Object.entries(optgroups).forEach(([datakey, grouplabel]) => {
                            if (response.data.hasOwnProperty(datakey)) {
                                var optgroup = $('<optgroup/>').attr('label', grouplabel);
                                createOptions(response.data[datakey], optgroup);
                                target.append(optgroup);
                            }
                        })
                    } else {
                        createOptions(response.data, target);
                    }
                    // When chosen will be ready, set up the virtual keyboard
                    target.on('chosen:ready', function () {
                        $(this).siblings('.chosen-container')
                            .find('input.chosen-search-input')
                            .semiticKeyboard(
                                $(this).siblings('.chosen-container'),
                                'right top',
                                'right top',
                                true
                            );
                    });
                    // Set up Chosen autocomplete on field we just filled
                    target.chosen(CHOSEN_SETTINGS);
                })
                .fail(function (response) {
                    console.error(criteriaName, response);
                })
                .always(function () {
                    target.siblings('.chosen-spinner').remove();
                });
        }

        // Show virtual keyboard on simple search field
        $('#simple input').semiticKeyboard(
            null,
            'right top',
            'right top',
            true
        );

        // Load criteria for guided mode
        loadCriteria('names', $('#guided select[name="names[]"]'));
        loadCriteria('languages', $('#guided select[name="languages[]"]'));
        loadCriteria('locations', $('#guided select[name="locations[]"]'));
        loadCriteria('sourceTypes', $('#guided select[name="sourceTypes[]"]'));
        loadCriteria('agents', $('#guided select[name="agents[]"]'), {
            activites: "{{('agent.fields.activite')|trans}}",
            agentivites: "{{('agent.fields.agentivite')|trans}}",
        });

        // Change tab and populate data
        var url = document.location.toString(),
            populate_mode = "{{ populate.mode }}";

        if (populate_mode != "") {
            // Populate mode from POST parameters if any
            changeMode(populate_mode);

            // Populate criteria
            var populate_criteria = "{{populate.criteria|e('js')}}";
            if (populate_criteria != "") {
                populateCriteriaData(populate_mode, $.parseJSON(populate_criteria));
            }
        }
        else if (url.match('#')) {
            changeMode(url.split('#')[1]);
        }

        // React to click on tabs
        $('#searchTabLinks a').on('click', function (e) {
            changeMode(e.target.hash.replace('#', ''));
        });

        // Watch reset buttons
        $('#guided').on('reset', function (e) {
            var form = $(this);
            setTimeout(() => {
                form.find('select').trigger('chosen:updated');
                form.find('input[name$="_mode"]').attr('checked', false);
                form.find('input[name="datation[exact]"]').attr('checked', true);
            }, 10);
        })

        // Watch query load buttons
        $('button.query-load-button').on('click', function (e) {
            var data = $(this).data();
            changeMode(data.queryMode);
            populateCriteriaData(
                data.queryMode,
                $.parseJSON(
                    decodeURIComponent(data.queryCriteria)
                )
            );
        });
    });
</script>
{% endblock %}